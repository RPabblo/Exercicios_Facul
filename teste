#include <stdio.h>
#include <stdlib.h>
#include <math.h>


typedef struct pilha {
    int value;
    struct pilha *proximo;
} Pilha;


void print_lista(Pilha *head);
void decimal_to_binary(Pilha *pilha, int num);
void adicionar_inicio(Pilha **head, int value);
Pilha *criar_elemento(int value);
void push(Pilha** root, int value);


Pilha *criar()
{
    Pilha *pilha = malloc(sizeof(Pilha));
    pilha->proximo = NULL;
    
    return pilha;
}

int main(void)
{
    Pilha *pilha = criar();
    int num = 14;

    decimal_to_binary(pilha, num);
    print_lista(pilha);
    
    return 0;
}


Pilha *criar_elemento(int value)
{
    Pilha *novo_elemento = malloc(sizeof(Pilha));

    novo_elemento->value = value;
    novo_elemento->proximo = NULL;

    return novo_elemento;
}


void adicionar_inicio(Pilha **head, int value)
{
    Pilha *novo_elemento = criar_elemento(value);

    if(*head == NULL) {
        *head = novo_elemento;
        return;
    }

    Pilha *temp = *head;

    while(temp != NULL) {
        temp = temp->proximo;
    }

    novo_elemento->proximo = *head;
    *head = novo_elemento;
}

void push(Pilha** root, int value)
{
    Pilha* stackNode = criar_elemento(value);
    stackNode->proximo = *root;
    *root = stackNode;
}


void print_lista(Pilha *head)
{
    Pilha *temp = head;

    while(temp != NULL) {
        printf("%d ", temp->value);
        temp = temp->proximo;
    }
    printf("\n");
}


void decimal_to_binary(Pilha *pilha, int num) 
{
    unsigned long long int q, r;
    while(num >= 1) {
        q = num / 2;
        r = num % 2;
        //array[i] = r;
        //adicionar_inicio(&pilha, r);
        push(&pilha, r);
        num = q;
    }   
}
